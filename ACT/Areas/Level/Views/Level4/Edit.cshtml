@using ACT.ViewModel
@model Level4ViewModel
@{
    var ajaxOptions = new AjaxOptions
    {
        OnBegin = "onFormBegin",
        OnComplete = "onFormComplete",
        HttpMethod = "POST"
    };
}

@using (Ajax.BeginForm(null, null, ajaxOptions, new { enctype = "multipart/form-data" }))
{

    @Html.HiddenFor(x => x.Id)

    <div class="portlet">
        <div class="portlet-title">
            <div class="actions btn-set">
                <a href="@Url.Action("Index","Level4",new {Area="Level" })" class="btn default"><i class="fa fa-reply"></i> رجوع </a>
                <button type="submit" class="btn  green"><i class="fa fa-check"></i> حفظ</button>
            </div>
        </div>
        <div class="portlet-body form">
            <div class="form-body">
                <div class="form-group row">
                    @Html.LabelFor(model => model.Level1Id, new { @class = "control-label col-md-1" })
                    <div class="col-md-4">
                        @Html.DropDownListFor(model => model.Level1Id, Enumerable.Empty<SelectListItem>(), Resources.LocalizedText.DropDownnPleaseSelect, new { @class = "form-control input-sm select2me" })
                        @Html.ValidationMessageFor(model => model.Level1Id)
                    </div>
                </div>
                <div class="form-group row">
                    @Html.LabelFor(model => model.Level2Id, new { @class = "control-label col-md-1" })
                    <div class="col-md-4">
                        @Html.DropDownListFor(model => model.Level2Id, Enumerable.Empty<SelectListItem>(), Resources.LocalizedText.DropDownnPleaseSelect, new { @class = "form-control input-sm select2me" })
                        @Html.ValidationMessageFor(model => model.Level2Id)
                    </div>
                </div>
                <div class="form-group row">
                    @Html.LabelFor(model => model.Level3Id, new { @class = "control-label col-md-1" })
                    <div class="col-md-4">
                        @Html.DropDownListFor(model => model.Level3Id, Enumerable.Empty<SelectListItem>(), Resources.LocalizedText.DropDownnPleaseSelect, new { @class = "form-control input-sm select2me" })
                        @Html.ValidationMessageFor(model => model.Level3Id)
                    </div>
                </div>
                <div class="form-group row">
                    @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-1" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control input-sm" } })
                        @Html.ValidationMessageFor(model => model.Name)
                    </div>
                </div>
                <div class="form-group row">
                    @Html.LabelFor(model => model.TypeEducationId, new { @class = "control-label col-md-1" })
                    <div class="col-md-4">
                        @Html.DropDownListFor(model => model.TypeEducationId, Enumerable.Empty<SelectListItem>(), Resources.LocalizedText.DropDownnPleaseSelect, new { @class = "form-control input-sm select2me" })
                        @Html.ValidationMessageFor(model => model.TypeEducationId)
                    </div>
                </div>
                <div class="form-group row">
                    @Html.LabelFor(model => model.TypeId, new { @class = "control-label col-md-1" })
                    <div class="col-md-4">
                        @Html.DropDownListFor(model => model.TypeId, Enumerable.Empty<SelectListItem>(), Resources.LocalizedText.DropDownnPleaseSelect, new { @class = "form-control input-sm select2me" })
                        @Html.ValidationMessageFor(model => model.TypeId)
                    </div>
                </div>
                <div class="form-group row">
                    <label class="col-md-1 control-label">@Resources.LocalizedText.Level4Stages</label>
                    <div class="col-md-4">
                        <div class="checkbox-list">
                            <label class="checkbox-inline">
                                @Html.CheckBoxFor(x => x.IsKindergarten)
                                @Html.DisplayNameFor(x => x.IsKindergarten)
                            </label>
                            <label class="checkbox-inline">
                                @Html.CheckBoxFor(x => x.IsBasic)
                                @Html.DisplayNameFor(x => x.IsBasic)
                            </label>
                            <label class="checkbox-inline">
                                @Html.CheckBoxFor(x => x.IsMedium)
                                @Html.DisplayNameFor(x => x.IsMedium)
                            </label>
                            <label class="checkbox-inline">
                                @Html.CheckBoxFor(x => x.IsSecondary)
                                @Html.DisplayNameFor(x => x.IsSecondary)
                            </label>
                        </div>
                    </div>
                </div>

                <div class="form-group row">
                    <label class="col-md-1 control-label">@Resources.LocalizedText.Level4ApprovedCurricula</label>
                    <div class="col-md-4">
                        <div class="checkbox-list">
                            <label class="checkbox-inline">
                                @Html.CheckBoxFor(x => x.IsMinistryEducation)
                                @Html.DisplayNameFor(x => x.IsMinistryEducation)
                            </label>
                            <label class="checkbox-inline">
                                @Html.CheckBoxFor(x => x.IsOtherEducation)
                                @Html.DisplayNameFor(x => x.IsOtherEducation)
                            </label>
                        </div>
                    </div>
                </div>


                <div class="form-group row other-education-row">
                    @Html.LabelFor(model => model.OtherEducationName, new { @class = "control-label col-md-1" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.OtherEducationName, new { htmlAttributes = new { @class = "form-control input-sm" } })
                        @Html.ValidationMessageFor(model => model.OtherEducationName)
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.IsDefault, new { @class = "control-label col-md-1" })
                    <div class="col-md-4">
                        @Html.CheckBoxFor(model => model.IsDefault, new { htmlAttributes = new { @class = "form-control input-sm" } })
                        @Html.ValidationMessageFor(model => model.IsDefault)
                    </div>
                </div>
                <div class="form-group row">
                    @Html.LabelFor(model => model.Published, new { @class = "control-label col-md-1" })
                    <div class="col-md-4">
                        @Html.CheckBoxFor(model => model.Published, new { htmlAttributes = new { @class = "form-control input-sm" } })
                        @Html.ValidationMessageFor(model => model.Published)
                    </div>
                </div>
                <div class="form-group row">
                    @Html.LabelFor(model => model.DisplayOrder, new { @class = "control-label col-md-1" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.DisplayOrder, new { htmlAttributes = new { @class = "touchspin_number form-control" } })
                        @Html.ValidationMessageFor(model => model.DisplayOrder)
                    </div>
                </div>
            </div>
        </div>
    </div>
}



@section scripts
{
    <script>
        var returnUrl = "@Url.Action("Index")";
      var fillLevel1Url = "@Url.Action("FillLevel1","Level1",new {Area="Level" })";
var fillLevel2Url = "@Url.Action("FillLevel2","Level2",new {Area="Level" })";
var fillLevel3Url = "@Url.Action("FillLevel3","Level3",new {Area="Level" })";
        var fillTypeEducationUrl = "@Url.Action("FillTypeEducation")";
        var fillSchoolTypeUrl = "@Url.Action("FillSchoolType")";
        var SelectedLevel1 = '@Model.Level1Id';
        var SelectedLevel2 = '@Model.Level2Id';
        var SelectedLevel3 = '@Model.Level3Id';
        var SelectedTypeEducationId = '@Model.TypeEducationId';
        var SelectedTypeId = '@Model.TypeId';
    </script>
    <script src="~/Scripts/Level4/AddOrEdit.js"></script>
}