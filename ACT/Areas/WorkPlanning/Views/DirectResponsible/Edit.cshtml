@model ACT.ViewModel.DirectResponsibleViewModel
@{
    var ajaxOptions = new AjaxOptions
    {
        OnBegin = "onFormBegin",
        OnComplete = "onFormComplete",
        HttpMethod = "POST"
    };
}

@using (Ajax.BeginForm(null, null, ajaxOptions, new { enctype = "multipart/form-data" }))
{

    @Html.HiddenFor(x => x.LevelId)
    @Html.HiddenFor(x => x.LevelNumber)
    <div class="portlet">
        <div class="portlet-title">
            <div class="actions btn-set">
                <a href="@Url.Action("Index")" class="btn default"><i class="fa fa-reply"></i> رجوع </a>
                <button type="submit" class="btn  green"><i class="fa fa-check"></i> حفظ</button>
            </div>
        </div>
        <div class="portlet-body form">
            <div class="form-body">
                <div class="form-group row">
                    @Html.LabelFor(model => model.ResponsibleId, new { @class = "control-label col-md-1" })
                    <div class="col-md-4">
                        @Html.DropDownListFor(m => m.ResponsibleId, Model.AlvailableResponsibleList, Resources.LocalizedText.WithoutResponsible, new { @class = "form-control input-sm select2me" })
                        @Html.ValidationMessageFor(model => model.ResponsibleId)
                    </div>
                </div>

                <div class="form-group row">
                    <label class="control-label col-md-1" for="LevelName">@Html.DisplayNameFor(x => x.LevelName)   @Model.LevelNumber</label>
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.LevelName, new { htmlAttributes = new { @class = "form-control input-sm", @readonly = "" } })
                    </div>
                </div>



            </div>
        </div>
    </div>
}



@section scripts
{
    <script>
        var returnUrl = "@Url.Action("Index")";
        @*var fillLevel1Url = "@Url.Action("FillLevel1","Level1",new {Area="Level" })";*@
    </script>
    @*<script src="~/Scripts/Level2/AddOrEdit.js"></script>*@
}